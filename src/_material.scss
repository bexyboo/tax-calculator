@import '~@angular/material/theming';
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

$mat-lab-red: (
    50 : #fce0e7,
    100 : #f7b3c4,
    200 : #f2809d,
    300 : #ec4d76,
    400 : #e82658,
    500 : #e4003b,
    600 : #e10035,
    700 : #dd002d,
    800 : #d90026,
    900 : #d10019,
    A100 : #fff9f9,
    A200 : #ffc6ca,
    A400 : #ff939a,
    A700 : #ff7a82,
    contrast: (
        50 : #000000,
        100 : #000000,
        200 : #000000,
        300 : #000000,
        400 : #ffffff,
        500 : #ffffff,
        600 : #ffffff,
        700 : #ffffff,
        800 : #ffffff,
        900 : #ffffff,
        A100 : #000000,
        A200 : #000000,
        A400 : #000000,
        A700 : #000000,
    )
);

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue.
$lab-app-primary: mat-palette($mat-lab-red);
$lab-app-accent:  mat-palette($mat-lab-red, 900, 500, A400);

// The warn palette is optional (defaults to red).
$lab-app-warn:    mat-palette($mat-pink);

// Create the theme object (a Sass map containing all of the palettes).
$lab-app-theme: mat-light-theme($lab-app-primary, $lab-app-accent, $lab-app-warn);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($lab-app-theme);